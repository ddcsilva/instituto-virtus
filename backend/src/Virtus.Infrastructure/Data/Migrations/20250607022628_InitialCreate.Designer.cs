// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Virtus.Infrastructure.Data;

#nullable disable

namespace Virtus.Infrastructure.Data.Migrations
{
    [DbContext(typeof(VirtusDbContext))]
    [Migration("20250607022628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("Virtus.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("PessoaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResponsavelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("Status");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCancelamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroOrdemEspera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurmaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("TurmaId");

                    b.HasIndex("TurmaId", "NumeroOrdemEspera")
                        .HasFilter("[NumeroOrdemEspera] > 0");

                    b.HasIndex("AlunoId", "TurmaId", "Status")
                        .HasFilter("[Status] = 1");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormaPagamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroTransacao")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PagadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DataVencimento");

                    b.HasIndex("PagadorId");

                    b.HasIndex("Status");

                    b.HasIndex("Status", "DataVencimento");

                    b.ToTable("Pagamentos", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.PagamentoAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ValorProporcional")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("PagamentoId", "AlunoId")
                        .IsUnique();

                    b.ToTable("PagamentosAlunos", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique()
                        .HasFilter("[CPF] IS NOT NULL");

                    b.HasIndex("Email")
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Tipo");

                    b.ToTable("Pessoas", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PessoaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Ativo");

                    b.HasIndex("Especialidade");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Ativa");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("Tipo");

                    b.HasIndex("DiaSemana", "Horario");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Pessoa", "Pessoa")
                        .WithOne()
                        .HasForeignKey("Virtus.Domain.Entities.Aluno", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Virtus.Domain.Entities.Pessoa", "Responsavel")
                        .WithMany()
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pessoa");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Matricula", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Virtus.Domain.Entities.Turma", "Turma")
                        .WithMany("Matriculas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Pessoa", "Pagador")
                        .WithMany()
                        .HasForeignKey("PagadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pagador");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.PagamentoAluno", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Virtus.Domain.Entities.Pagamento", "Pagamento")
                        .WithMany("PagamentoAlunos")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Professor", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Pessoa", "Pessoa")
                        .WithOne()
                        .HasForeignKey("Virtus.Domain.Entities.Professor", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Turma", b =>
                {
                    b.HasOne("Virtus.Domain.Entities.Professor", "Professor")
                        .WithMany("Turmas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("PagamentoAlunos");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Professor", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("Virtus.Domain.Entities.Turma", b =>
                {
                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
